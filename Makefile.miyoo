VERSION ?= $(shell date +%Y-%m-%d\ %H:%M)
RELEASEDIR = package
TARGET = iotester
ASSETSDIR = assets
OPKG_ASSETSDIR = opkg_assets
LINK=iotester.lnk
SECTION=applications
ALIASES=aliases.txt

CHAINPREFIX ?=/opt/miyoo
CROSS_COMPILE ?= $(CHAINPREFIX)/usr/bin/arm-linux-

CC = $(CROSS_COMPILE)gcc
CXX = $(CROSS_COMPILE)g++
STRIP = $(CROSS_COMPILE)strip

SYSROOT		?= $(shell $(CC) --print-sysroot)
PKGS		:= sdl SDL_image SDL_ttf
PKGS_CFLAGS	:= $(shell $(SYSROOT)/../../usr/bin/pkg-config --cflags $(PKGS))
PKGS_LIBS	:= $(shell $(SYSROOT)/../../usr/bin/pkg-config --libs $(PKGS))

CFLAGS = -DTARGET_MIYOO -DTARGET_$(DEVICE) $(PKGS_CFLAGS)
CXXFLAGS = $(CFLAGS)
LDFLAGS = $(PKGS_LIBS)

all:
ifeq ($(DEVICE), XYC)
	$(CXX) iotester.c -o xyc_$(TARGET) -ggdb -g3 $(CFLAGS) $(LDFLAGS)
else ifeq ($(DEVICE), BITTBOY)
	$(CXX) iotester.c -o bittboy_$(TARGET) -ggdb -g3 $(CFLAGS) $(LDFLAGS)
else
	$(CXX) iotester.c -o default_$(TARGET) -ggdb -g3 $(CFLAGS) $(LDFLAGS)
endif

release:
	$(CXX) -DTARGET_XYC iotester.c -o xyc_$(TARGET) $(CFLAGS) $(LDFLAGS)
	$(CXX) -DTARGET_BITTBOY iotester.c -o bittboy_$(TARGET) $(CFLAGS) $(LDFLAGS)
	$(CXX) -DTARGET_DEFAULT iotester.c -o default_$(TARGET) $(CFLAGS) $(LDFLAGS)
	$(STRIP) xyc_$(TARGET) bittboy_$(TARGET) default_$(TARGET)

package: release
	@mkdir -p $(RELEASEDIR)
	@cp *$(TARGET) $(RELEASEDIR)/
	@mkdir -p $(RELEASEDIR)/mnt/apps/$(TARGET)
	@mkdir -p $(RELEASEDIR)/mnt/gmenu2x/sections/applications
	@mv $(RELEASEDIR)/*$(TARGET) $(RELEASEDIR)/mnt/apps/$(TARGET)/
	@cp -r $(ASSETSDIR)/* $(RELEASEDIR)/mnt/apps/$(TARGET)
	@cp $(OPKG_ASSETSDIR)/$(LINK) $(RELEASEDIR)/mnt/gmenu2x/sections/$(SECTION)
	@cp $(OPKG_ASSETSDIR)/$(ALIASES) $(RELEASEDIR)/mnt/apps/$(TARGET)

zip: package
	@cd $(RELEASEDIR) && zip -rq $(TARGET)$(VERSION).zip ./* && mv *.zip ..
	@rm -rf $(RELEASEDIR)

ipk: package
	@mkdir -p $(RELEASEDIR)/data
	@mv $(RELEASEDIR)/mnt $(RELEASEDIR)/data/
	@cp -r $(OPKG_ASSETSDIR)/control $(RELEASEDIR)
	@sed "s/^Version:.*/Version: $(VERSION)/" $(OPKG_ASSETSDIR)/control/control > $(RELEASEDIR)/control/control
	@echo 2.0 > $(RELEASEDIR)/debian-binary
	@tar --owner=0 --group=0 -czvf $(RELEASEDIR)/data.tar.gz -C $(RELEASEDIR)/data/ . >/dev/null 2>&1
	@tar --owner=0 --group=0 -czvf $(RELEASEDIR)/control.tar.gz -C $(RELEASEDIR)/control/ . >/dev/null 2>&1
	@ar r $(TARGET).ipk $(RELEASEDIR)/control.tar.gz $(RELEASEDIR)/data.tar.gz $(RELEASEDIR)/debian-binary
	@rm -rf $(RELEASEDIR)

clean:
	rm -rf $(RELEASEDIR)
	rm -f *$(TARGET)
	rm -f *.ipk
	rm -f *.zip
